<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gci.schedule.driverless.mapper.ScheduleParamsClassesMapper">
  <resultMap id="BaseResultMap" type="com.gci.schedule.driverless.bean.scheduleD.ScheduleParamsClasses">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Apr 22 13:58:59 CST 2019.
    -->
    <result column="TEMPLATE_ID" jdbcType="DECIMAL" property="templateId"/>
    <result column="ROUTE_ID" jdbcType="DECIMAL" property="routeId" />
    <result column="DIRECTION" jdbcType="VARCHAR" property="direction" />
    <result column="BEGIN_TIME" jdbcType="VARCHAR" property="beginTime" />
    <result column="END_TIME" jdbcType="VARCHAR" property="endTime" />
    <result column="CLASSES_NUM_MIN" jdbcType="DECIMAL" property="classesNumMin" />
    <result column="MAX_DISPATCH_INTERVAL" jdbcType="DECIMAL" property="maxDispatchInterval" />
    <result column="BEGIN_TIME_DATE" jdbcType="TIMESTAMP" property="beginTimeDate" />
    <result column="END_TIME_DATE" jdbcType="TIMESTAMP" property="endTimeDate" />
    <result column="IS_REGULAR_BUS" jdbcType="DECIMAL" property="isRegularBus" />
  </resultMap>


  <select id="getByTemplateId" resultMap="BaseResultMap"  parameterType="map">
    select * from BS_SCHEDULE_PARAMS_CLASSES where    template_id = #{templateId, jdbcType=VARCHAR}
    order by direction ,begin_time
  </select>


  <select id="selectList" resultMap="BaseResultMap">
    select * from BS_SCHEDULE_PARAMS_CLASSES where 1=1
    order by direction ,begin_time
  </select>

  <select id="selectByRouteId" resultMap="BaseResultMap">
    select * from BS_SCHEDULE_PARAMS_CLASSES where route_id = #{routeId,jdbcType=DECIMAL}
    order by direction ,begin_time
  </select>


  <delete id="delByTemplateId">
    delete from BS_SCHEDULE_PARAMS_CLASSES where   template_id = #{templateId, jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="map">
    insert into BS_SCHEDULE_PARAMS_CLASSES (ROUTE_ID, DIRECTION, BEGIN_TIME,
    END_TIME, CLASSES_NUM_MIN,MAX_DISPATCH_INTERVAL ,TEMPLATE_ID ,UPDATE_USER,UPDATE_TIME,IS_REGULAR_BUS)
    values (#{routeId,jdbcType=DECIMAL}, #{direction,jdbcType=VARCHAR}, #{beginTime,jdbcType=VARCHAR},
    #{endTime,jdbcType=VARCHAR}, #{classesNumMin,jdbcType=DECIMAL}, #{maxDispatchInterval,jdbcType=DECIMAL}
    ,#{templateId, jdbcType=VARCHAR} ,#{updateUser, jdbcType=VARCHAR} ,sysdate,#{classparams_isRegularBus,jdbcType=DECIMAL})
  </insert>

  <select id="queryByPassenger" resultMap="BaseResultMap">
    select f.ROUTE_ID,f.BEGIN_TIME,f.direction,
    case when f.CLASSES_NUM_MIN_FIX+f.CLASSES_NUM_MIN_FIX_OTHER &gt;= f.classes_num_min or f.CLASSES_NUM_MIN_FIX &gt;= f.classes_num_min/2 then f.CLASSES_NUM_MIN_FIX
    when f.CLASSES_NUM_MIN_FIX_OTHER &gt;= f.classes_num_min/2 then f.CLASSES_NUM_MIN_FIX+f.classes_num_min-f.CLASSES_NUM_MIN_FIX-f.CLASSES_NUM_MIN_FIX_OTHER
    when (f.classes_num_min &lt;&gt; 3 and (f.MAX_PASSENGER &gt; f.MAX_PASSENGER_OTHER or (f.MAX_PASSENGER = f.MAX_PASSENGER_OTHER and SUBSTR(f.BEGIN_TIME,3) = '30'))) or
    (f.classes_num_min = 3 and (SUBSTR(f.BEGIN_TIME,3) = '30' or f.MAX_PASSENGER_OTHER is null)) then ceil(f.classes_num_min/2) else floor(f.classes_num_min/2) end CLASSES_NUM_MIN
    from (
    select ttt.ROUTE_ID,ttt.BEGIN_TIME,ttt.direction,ttt.classes_num_min,ttt.CLASSES_NUM_MIN_FIX,TTT.MAX_PASSENGER,
    case when SUBSTR(ttt.BEGIN_TIME,3) = '30' then (lag(ttt.CLASSES_NUM_MIN_FIX) over (partition by ttt.ROUTE_ID,ttt.direction order by ttt.BEGIN_TIME))
    else (lead(ttt.CLASSES_NUM_MIN_FIX) over (partition by ttt.ROUTE_ID,ttt.direction order by ttt.BEGIN_TIME)) end CLASSES_NUM_MIN_FIX_OTHER,
    case when SUBSTR(ttt.BEGIN_TIME,3) = '30' then (lag(ttt.max_passenger) over (partition by ttt.ROUTE_ID,ttt.direction order by ttt.BEGIN_TIME))
    else (lead(ttt.max_passenger) over (partition by ttt.ROUTE_ID,ttt.direction order by ttt.BEGIN_TIME)) end MAX_PASSENGER_OTHER
    from (
    select tt.route_id,tt.run_time BEGIN_TIME,tt.direction,tt.classes_num_min,tt.max_passenger,
    case when tt.classes_num_PASSENGER &lt; tt.CLASSES_NUM_MIN_HALF then tt.CLASSES_NUM_MIN_HALF else classes_num_PASSENGER end CLASSES_NUM_MIN_FIX
    from (
    select o.route_id,t.run_time,o.direction,ceil(ceil(max(p.current_number))/(#{vehicleContent,jdbcType=DECIMAL}*o.bus_occupancy*0.01)) classes_num_passenger,max(p.current_number) max_passenger,
    c.classes_num_min,floor(30/c.max_dispatch_interval) CLASSES_NUM_MIN_HALF
    from (
    select to_char(trunc(#{runDate,jdbcType=TIMESTAMP})+1/24/2*(rownum-1), 'hh24mi') run_time,
    trunc((trunc(#{runDate,jdbcType=TIMESTAMP})+1/24/2*(rownum-1) - trunc(#{runDate,jdbcType=TIMESTAMP})) * 1440 / 30) run_time_num
    from dual
    connect by rownum &lt;= 48
    ) t
    left join BS_SCHEDULE_PARAMS_ANCHOR o
    on t.run_time &lt; o.end_time
    and t.run_time &gt;= o.begin_time
    left join rep_station_passenger p
    on p.route_id = o.route_id
    and p.run_time_num = t.run_time_num
    and p.direction = o.direction
    left join BS_SCHEDULE_PARAMS_CLASSES c
    on c.route_id = o.route_id
    and c.direction = o.direction
    and t.run_time &lt; c.end_time
    and t.run_time &gt;= c.begin_time
    where o.route_id = #{routeId,jdbcType=DECIMAL}
    and p.run_day_num = to_char(#{runDate,jdbcType=TIMESTAMP}, 'D')
    group by o.route_id,t.run_time,t.run_time_num,o.direction,o.bus_occupancy,c.classes_num_min,c.max_dispatch_interval
    ) tt
    order by tt.route_id,tt.direction,tt.run_time) ttt) f order by BEGIN_TIME,direction
  </select>

  <select id="queryByRoute" resultMap="BaseResultMap">
    select t.*,to_date(to_char(#{runDate,jdbcType=TIMESTAMP},'yyyymmdd')||t.begin_time,'yyyymmddhh24mi') begin_time_date,
    to_date(to_char(#{runDate,jdbcType=TIMESTAMP},'yyyymmdd')||t.end_time,'yyyymmddhh24mi') end_time_date
    from BS_SCHEDULE_PARAMS_CLASSES T
    where t.route_id = #{routeId,jdbcType=DECIMAL}
  </select>

    <select id="getInitClassesData" resultMap="BaseResultMap">
      select * from bs_schedule_params_classes where route_id=0
    </select>

    <insert id="insertByTemplate" parameterType="java.util.Map" >
    insert into  bs_schedule_params_classes c2 (c2.route_id, c2.direction, c2.begin_time, c2.end_time,c2.classes_num_min, c2.max_dispatch_interval
     ,c2.template_id ,c2.update_user,c2.update_time)
    (select route_id2, t.direction, t.begin_time, t.end_time,t.classes_num_min, t.max_dispatch_interval
    ,#{templateId} ,#{updateUser} ,sysdate from
     (select #{routeId} as route_id2, c.direction, c.begin_time, c.end_time,c.classes_num_min, c.max_dispatch_interval
     from  bs_schedule_params_classes  c
     where c.route_id =0
     <if test="direction != null">
       and c.direction = #{direction}
     </if>
     ) t)
  </insert>

  <insert id="insetObject">
    insert into BS_SCHEDULE_PARAMS_CLASSES (ROUTE_ID, DIRECTION, BEGIN_TIME,
    END_TIME, CLASSES_NUM_MIN,MAX_DISPATCH_INTERVAL ,TEMPLATE_ID ,UPDATE_USER,UPDATE_TIME)
    values (#{routeId}, #{direction}, #{beginTime},
    #{endTime}, #{classesNumMin}, #{maxDispatchInterval}
    ,#{templateId} ,#{updateUser} ,sysdate)
  </insert>
</mapper>